package example

// Code generated by "fiberopenapi -spec ./petstore-simple.json"; DO NOT EDIT.

import (
	"encoding/json"

	"github.com/gofiber/fiber/v2"
)

// Implement this interface.
type Handlers interface {
	FindPet(c *fiber.Ctx, FindPetId FindPetId) error
	UpdatePet(c *fiber.Ctx, UpdatePetId UpdatePetId) error
}

type rawHandlers interface {
	FindPet(c *fiber.Ctx) error
	UpdatePet(c *fiber.Ctx) error
}

func addRawHandlers(app *fiber.App, h rawHandlers) {
	app.Get("/pet/:id", h.FindPet)
	app.Put("/pet/:id", h.UpdatePet)
}

type validatedHandlers struct {
	validated Handlers
}

func AddHandlers(app *fiber.App, h Handlers) {
	addRawHandlers(app, &validatedHandlers{h})
}

func (h *validatedHandlers) FindPet(c *fiber.Ctx) error {
	var FindPetId FindPetId
	if err := json.Unmarshal([]byte(c.Params("FindPetId")), &FindPetId); err != nil {
		return err
	}
	return h.validated.FindPet(c, FindPetId)
}

func (h *validatedHandlers) UpdatePet(c *fiber.Ctx) error {
	var UpdatePetId UpdatePetId
	if err := json.Unmarshal([]byte(c.Params("UpdatePetId")), &UpdatePetId); err != nil {
		return err
	}
	return h.validated.UpdatePet(c, UpdatePetId)
}
