package main

import (
	_ "embed"
	"fmt"
	"os"
	"strings"

	"github.com/pb33f/libopenapi"
	v3 "github.com/pb33f/libopenapi/datamodel/high/v3"
)

//go:embed base_models.go
var modelsFile string

func GenerateModels(spec *libopenapi.DocumentModel[v3.Document], packagePath, outputPath string) error {
	g := &Generator{}

	// Get the package name and generate file header.
	packageName, err := LoadPackageName(packagePath)
	if err != nil {
		return err
	}

	g.Printf(`package %s

// Code generated by "fiberopenapi %s"; DO NOT EDIT.

%s
`,
		packageName,
		strings.Join(os.Args[1:], " "),
		strings.TrimPrefix(modelsFile, "package main\n\n"),
	)

	modelTypes := ExtractModelTypesFromDocument(spec)

	for _, modelType := range modelTypes {
		g.Printf("\n%stype %s %s\n", modelType.Docstring(), modelType.Name(), modelType.Definition())
	}

	// Write the generated code.
	if err := g.WriteFile(outputPath); err != nil {
		return fmt.Errorf("cannot write generated code: %w", err)
	}
	return nil
}
